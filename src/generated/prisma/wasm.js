
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  avatar: 'avatar',
  bio: 'bio',
  status: 'status',
  role: 'role',
  isEmailVerified: 'isEmailVerified',
  isPhoneVerified: 'isPhoneVerified',
  credits: 'credits',
  level: 'level',
  totalSpent: 'totalSpent',
  totalEarned: 'totalEarned',
  totalGuesses: 'totalGuesses',
  guessAccuracy: 'guessAccuracy',
  guessEarnings: 'guessEarnings',
  guessLevel: 'guessLevel',
  levelProgress: 'levelProgress',
  consecutiveGuesses: 'consecutiveGuesses',
  bestStreak: 'bestStreak',
  favoriteAgent: 'favoriteAgent',
  emailNotifications: 'emailNotifications',
  marketingEmails: 'marketingEmails',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastLoginAt: 'lastLoginAt'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  isRevoked: 'isRevoked',
  createdAt: 'createdAt'
};

exports.Prisma.IdeaScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  category: 'category',
  tags: 'tags',
  userId: 'userId',
  isAnonymous: 'isAnonymous',
  status: 'status',
  visibility: 'visibility',
  viewCount: 'viewCount',
  likeCount: 'likeCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BiddingSessionScalarFieldEnum = {
  id: 'id',
  ideaId: 'ideaId',
  userId: 'userId',
  startPrice: 'startPrice',
  currentHigh: 'currentHigh',
  winnerAgent: 'winnerAgent',
  winnerAgentType: 'winnerAgentType',
  finalPrice: 'finalPrice',
  status: 'status',
  phase: 'phase',
  enhancedByDiscussion: 'enhancedByDiscussion',
  discussionId: 'discussionId',
  enhancementScore: 'enhancementScore',
  participantCount: 'participantCount',
  viewerCount: 'viewerCount',
  maxViewerCount: 'maxViewerCount',
  totalInteractions: 'totalInteractions',
  durationSeconds: 'durationSeconds',
  discussionDuration: 'discussionDuration',
  biddingDuration: 'biddingDuration',
  startedAt: 'startedAt',
  endedAt: 'endedAt',
  discussionStartedAt: 'discussionStartedAt',
  biddingStartedAt: 'biddingStartedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  avgResponseTime: 'avgResponseTime',
  aiServiceCost: 'aiServiceCost',
  userEngagementScore: 'userEngagementScore',
  contentQualityScore: 'contentQualityScore'
};

exports.Prisma.BidScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  agentName: 'agentName',
  agentType: 'agentType',
  amount: 'amount',
  comment: 'comment',
  confidence: 'confidence',
  analysisData: 'analysisData',
  reasoning: 'reasoning',
  emotionalState: 'emotionalState',
  isScripted: 'isScripted',
  aiServiceUsed: 'aiServiceUsed',
  generationCost: 'generationCost',
  responseTimeMs: 'responseTimeMs',
  qualityScore: 'qualityScore',
  understandingDepth: 'understandingDepth',
  contextRichness: 'contextRichness',
  createdAt: 'createdAt'
};

exports.Prisma.PriceGuessScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  userId: 'userId',
  guessedPrice: 'guessedPrice',
  confidence: 'confidence',
  stakeAmount: 'stakeAmount',
  actualPrice: 'actualPrice',
  accuracy: 'accuracy',
  reward: 'reward',
  basedOnDiscussion: 'basedOnDiscussion',
  predictionConfidenceBonus: 'predictionConfidenceBonus',
  timeSpentMs: 'timeSpentMs',
  adjustmentCount: 'adjustmentCount',
  createdAt: 'createdAt'
};

exports.Prisma.AIInteractionScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  agentName: 'agentName',
  agentType: 'agentType',
  interactionType: 'interactionType',
  phase: 'phase',
  content: 'content',
  emotion: 'emotion',
  animation: 'animation',
  isScripted: 'isScripted',
  aiServiceUsed: 'aiServiceUsed',
  generationCost: 'generationCost',
  responseTimeMs: 'responseTimeMs',
  qualityScore: 'qualityScore',
  userReactions: 'userReactions',
  engagementScore: 'engagementScore',
  isRandomEvent: 'isRandomEvent',
  eventType: 'eventType',
  createdAt: 'createdAt'
};

exports.Prisma.UserBiddingBehaviorScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  userId: 'userId',
  actionType: 'actionType',
  actionData: 'actionData',
  timestamp: 'timestamp',
  phase: 'phase',
  agentName: 'agentName'
};

exports.Prisma.AIServiceUsageScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  agentName: 'agentName',
  serviceName: 'serviceName',
  modelName: 'modelName',
  promptTokens: 'promptTokens',
  completionTokens: 'completionTokens',
  totalTokens: 'totalTokens',
  requestCount: 'requestCount',
  totalCost: 'totalCost',
  responseTimeMs: 'responseTimeMs',
  qualityRating: 'qualityRating',
  userSatisfaction: 'userSatisfaction',
  errorCount: 'errorCount',
  retryCount: 'retryCount',
  createdAt: 'createdAt',
  date: 'date'
};

exports.Prisma.UserAchievementScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  achievementId: 'achievementId',
  achievementName: 'achievementName',
  description: 'description',
  category: 'category',
  bonusPoints: 'bonusPoints',
  earnedAt: 'earnedAt',
  progressData: 'progressData',
  isRare: 'isRare'
};

exports.Prisma.ResearchReportScalarFieldEnum = {
  id: 'id',
  ideaId: 'ideaId',
  userId: 'userId',
  reportData: 'reportData',
  summary: 'summary',
  basicAnalysis: 'basicAnalysis',
  researchMethods: 'researchMethods',
  dataSources: 'dataSources',
  mvpGuidance: 'mvpGuidance',
  businessModel: 'businessModel',
  status: 'status',
  progress: 'progress',
  creditsCost: 'creditsCost',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt'
};

exports.Prisma.CreditTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  amount: 'amount',
  type: 'type',
  description: 'description',
  relatedId: 'relatedId',
  balanceBefore: 'balanceBefore',
  balanceAfter: 'balanceAfter',
  createdAt: 'createdAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  outTradeNo: 'outTradeNo',
  amount: 'amount',
  credits: 'credits',
  description: 'description',
  currency: 'currency',
  provider: 'provider',
  providerOrderId: 'providerOrderId',
  payUrl: 'payUrl',
  qrCodeUrl: 'qrCodeUrl',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paidAt: 'paidAt',
  expiredAt: 'expiredAt'
};

exports.Prisma.RefundScalarFieldEnum = {
  id: 'id',
  paymentId: 'paymentId',
  outRefundNo: 'outRefundNo',
  refundAmount: 'refundAmount',
  reason: 'reason',
  status: 'status',
  providerRefundId: 'providerRefundId',
  operatorId: 'operatorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  refundedAt: 'refundedAt'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  filename: 'filename',
  originalName: 'originalName',
  key: 'key',
  url: 'url',
  size: 'size',
  contentType: 'contentType',
  type: 'type',
  status: 'status',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.SystemConfigScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AIUsageStatsScalarFieldEnum = {
  id: 'id',
  provider: 'provider',
  model: 'model',
  requestCount: 'requestCount',
  totalTokens: 'totalTokens',
  totalCost: 'totalCost',
  date: 'date',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IdeaDiscussionScalarFieldEnum = {
  id: 'id',
  ideaId: 'ideaId',
  userId: 'userId',
  status: 'status',
  currentRound: 'currentRound',
  totalRounds: 'totalRounds',
  aiAgentType: 'aiAgentType',
  aiAgentName: 'aiAgentName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt'
};

exports.Prisma.DiscussionMessageScalarFieldEnum = {
  id: 'id',
  discussionId: 'discussionId',
  content: 'content',
  messageType: 'messageType',
  roundNumber: 'roundNumber',
  senderType: 'senderType',
  senderName: 'senderName',
  analysisData: 'analysisData',
  suggestions: 'suggestions',
  createdAt: 'createdAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  amount: 'amount',
  currency: 'currency',
  description: 'description',
  status: 'status',
  paymentMethod: 'paymentMethod',
  paymentId: 'paymentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paidAt: 'paidAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  agentId: 'agentId',
  price: 'price',
  quantity: 'quantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AgentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  type: 'type',
  status: 'status',
  price: 'price',
  credits: 'credits',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserStatus = exports.$Enums.UserStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  BANNED: 'BANNED'
};

exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

exports.UserLevel = exports.$Enums.UserLevel = {
  BRONZE: 'BRONZE',
  SILVER: 'SILVER',
  GOLD: 'GOLD',
  PLATINUM: 'PLATINUM',
  DIAMOND: 'DIAMOND'
};

exports.IdeaCategory = exports.$Enums.IdeaCategory = {
  TECH: 'TECH',
  LIFESTYLE: 'LIFESTYLE',
  EDUCATION: 'EDUCATION',
  HEALTH: 'HEALTH',
  FINANCE: 'FINANCE',
  ENTERTAINMENT: 'ENTERTAINMENT',
  BUSINESS: 'BUSINESS',
  RETAIL: 'RETAIL',
  OTHER: 'OTHER'
};

exports.IdeaStatus = exports.$Enums.IdeaStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  ARCHIVED: 'ARCHIVED'
};

exports.IdeaVisibility = exports.$Enums.IdeaVisibility = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE',
  UNLISTED: 'UNLISTED'
};

exports.BiddingStatus = exports.$Enums.BiddingStatus = {
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  ENDED: 'ENDED',
  CANCELLED: 'CANCELLED',
  FAILED: 'FAILED'
};

exports.BiddingPhase = exports.$Enums.BiddingPhase = {
  DISCUSSION: 'DISCUSSION',
  BIDDING: 'BIDDING',
  RESULTS: 'RESULTS'
};

exports.AIInteractionType = exports.$Enums.AIInteractionType = {
  opening: 'opening',
  bid_reaction: 'bid_reaction',
  psychology: 'psychology',
  result: 'result',
  glitch: 'glitch',
  mimicry: 'mimicry',
  conflict: 'conflict',
  alliance: 'alliance',
  breakdown: 'breakdown',
  user_response: 'user_response'
};

exports.UserBiddingAction = exports.$Enums.UserBiddingAction = {
  enter_session: 'enter_session',
  leave_session: 'leave_session',
  support_agent: 'support_agent',
  react_to_dialogue: 'react_to_dialogue',
  submit_guess: 'submit_guess',
  adjust_guess: 'adjust_guess',
  share_session: 'share_session',
  report_issue: 'report_issue'
};

exports.ReportStatus = exports.$Enums.ReportStatus = {
  GENERATING: 'GENERATING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.CreditTransactionType = exports.$Enums.CreditTransactionType = {
  REGISTER_BONUS: 'REGISTER_BONUS',
  PURCHASE: 'PURCHASE',
  RESEARCH_COST: 'RESEARCH_COST',
  REFUND: 'REFUND',
  ADMIN_ADJUSTMENT: 'ADMIN_ADJUSTMENT',
  WITHDRAW: 'WITHDRAW'
};

exports.DiscussionStatus = exports.$Enums.DiscussionStatus = {
  ACTIVE: 'ACTIVE',
  COMPLETED: 'COMPLETED',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

exports.MessageType = exports.$Enums.MessageType = {
  INITIAL_ANALYSIS: 'INITIAL_ANALYSIS',
  CLARIFICATION_REQUEST: 'CLARIFICATION_REQUEST',
  USER_RESPONSE: 'USER_RESPONSE',
  IMPROVEMENT_SUGGESTION: 'IMPROVEMENT_SUGGESTION',
  FINAL_ASSESSMENT: 'FINAL_ASSESSMENT'
};

exports.SenderType = exports.$Enums.SenderType = {
  USER: 'USER',
  AI_AGENT: 'AI_AGENT'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED'
};

exports.AgentType = exports.$Enums.AgentType = {
  CREATIVE: 'CREATIVE',
  ANALYTICAL: 'ANALYTICAL',
  TECHNICAL: 'TECHNICAL',
  BUSINESS: 'BUSINESS',
  MARKETING: 'MARKETING'
};

exports.AgentStatus = exports.$Enums.AgentStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  MAINTENANCE: 'MAINTENANCE'
};

exports.Prisma.ModelName = {
  User: 'User',
  UserSession: 'UserSession',
  RefreshToken: 'RefreshToken',
  Idea: 'Idea',
  BiddingSession: 'BiddingSession',
  Bid: 'Bid',
  PriceGuess: 'PriceGuess',
  AIInteraction: 'AIInteraction',
  UserBiddingBehavior: 'UserBiddingBehavior',
  AIServiceUsage: 'AIServiceUsage',
  UserAchievement: 'UserAchievement',
  ResearchReport: 'ResearchReport',
  CreditTransaction: 'CreditTransaction',
  Payment: 'Payment',
  Refund: 'Refund',
  File: 'File',
  SystemConfig: 'SystemConfig',
  AIUsageStats: 'AIUsageStats',
  IdeaDiscussion: 'IdeaDiscussion',
  DiscussionMessage: 'DiscussionMessage',
  Order: 'Order',
  CartItem: 'CartItem',
  Agent: 'Agent'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\ai\\AIagentshichang\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "binary"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl"
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\ai\\AIagentshichang\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// AI创意调研平台数据库模�?- 生产级增强版\n// 支持用户管理、创意提交、调研指导、竞价系统、积分系统等核心功能\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../src/generated/prisma\"\n  binaryTargets = [\"native\", \"linux-musl\", \"linux-musl-openssl-3.0.x\"]\n  engineType    = \"binary\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// 用户�?\nmodel User {\n  id           String  @id @default(cuid())\n  email        String  @unique\n  username     String  @unique\n  passwordHash String  @map(\"password_hash\")\n  firstName    String? @map(\"first_name\")\n  lastName     String? @map(\"last_name\")\n  phone        String? @unique\n  avatar       String?\n  bio          String?\n\n  // 用户状�?\n  status          UserStatus @default(ACTIVE)\n  role            UserRole   @default(USER)\n  isEmailVerified Boolean    @default(false) @map(\"is_email_verified\")\n  isPhoneVerified Boolean    @default(false) @map(\"is_phone_verified\")\n\n  // 积分和等�?\n  credits     Int       @default(1000) // 注册赠�?000积分\n  level       UserLevel @default(BRONZE)\n  totalSpent  Int       @default(0) @map(\"total_spent\")\n  totalEarned Int       @default(0) @map(\"total_earned\")\n\n  // 竞价相关统计 - 新增\n  totalGuesses       Int     @default(0) @map(\"total_guesses\")\n  guessAccuracy      Float   @default(0) @map(\"guess_accuracy\")\n  guessEarnings      Int     @default(0) @map(\"guess_earnings\")\n  guessLevel         Int     @default(1) @map(\"guess_level\")\n  levelProgress      Float   @default(0) @map(\"level_progress\")\n  consecutiveGuesses Int     @default(0) @map(\"consecutive_guesses\")\n  bestStreak         Int     @default(0) @map(\"best_streak\")\n  favoriteAgent      String? @map(\"favorite_agent\")\n\n  // 通知设置\n  emailNotifications Boolean @default(true) @map(\"email_notifications\")\n  marketingEmails    Boolean @default(false) @map(\"marketing_emails\")\n\n  // 时间�?\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  updatedAt   DateTime  @updatedAt @map(\"updated_at\")\n  lastLoginAt DateTime? @map(\"last_login_at\")\n\n  // 关联关系\n  ideas              Idea[]\n  researchReports    ResearchReport[]\n  creditTransactions CreditTransaction[]\n  payments           Payment[]\n  sessions           UserSession[]\n  refreshTokens      RefreshToken[]\n  files              File[]\n  discussions        IdeaDiscussion[]\n  orders             Order[]\n  cartItems          CartItem[]\n  biddingSessions    BiddingSession[] // 新增\n  priceGuesses       PriceGuess[] // 新增\n  biddingBehaviors   UserBiddingBehavior[] // 新增\n  achievements       UserAchievement[] // 新增\n\n  @@map(\"users\")\n}\n\n// 用户状态枚�?\nenum UserStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n  BANNED\n}\n\n// 用户角色枚举\nenum UserRole {\n  USER\n  ADMIN\n  MODERATOR\n}\n\n// 用户等级枚举\nenum UserLevel {\n  BRONZE\n  SILVER\n  GOLD\n  PLATINUM\n  DIAMOND\n}\n\n// 用户会话�?\nmodel UserSession {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  token     String   @unique\n  ipAddress String?  @map(\"ip_address\")\n  userAgent String?  @map(\"user_agent\")\n  expiresAt DateTime @map(\"expires_at\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_sessions\")\n}\n\n// 刷新令牌�?\nmodel RefreshToken {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  token     String   @unique\n  expiresAt DateTime @map(\"expires_at\")\n  isRevoked Boolean  @default(false) @map(\"is_revoked\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"refresh_tokens\")\n}\n\n// 创意�?\nmodel Idea {\n  id          String       @id @default(cuid())\n  title       String\n  description String\n  category    IdeaCategory\n  tags        String       @default(\"\") // 标签，用逗号分隔\n\n  // 提交者信�?\n  userId      String  @map(\"user_id\")\n  isAnonymous Boolean @default(false) @map(\"is_anonymous\")\n\n  // 状态管�?\n  status     IdeaStatus     @default(PENDING)\n  visibility IdeaVisibility @default(PUBLIC)\n\n  // 统计数据\n  viewCount Int @default(0) @map(\"view_count\")\n  likeCount Int @default(0) @map(\"like_count\")\n\n  // 时间�?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // 关联关系\n  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)\n  researchReports ResearchReport[]\n  discussions     IdeaDiscussion[]\n  biddingSessions BiddingSession[] // 新增\n\n  @@map(\"ideas\")\n}\n\n// 创意分类枚举\nenum IdeaCategory {\n  TECH\n  LIFESTYLE\n  EDUCATION\n  HEALTH\n  FINANCE\n  ENTERTAINMENT\n  BUSINESS\n  RETAIL\n  OTHER\n}\n\n// 创意状态枚�?\nenum IdeaStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  ARCHIVED\n}\n\n// 创意可见性枚�?\nenum IdeaVisibility {\n  PUBLIC\n  PRIVATE\n  UNLISTED\n}\n\n// ==================== 竞价系统核心�?====================\n\n// 竞价会话�?- 生产级增强版\nmodel BiddingSession {\n  id              String  @id @default(cuid())\n  ideaId          String  @map(\"idea_id\")\n  userId          String? @map(\"user_id\") // 会话发起�?\n  startPrice      Int     @default(50) @map(\"start_price\")\n  currentHigh     Int     @default(50) @map(\"current_high\")\n  winnerAgent     String? @map(\"winner_agent\")\n  winnerAgentType String? @map(\"winner_agent_type\")\n  finalPrice      Int?    @map(\"final_price\")\n\n  // 会话状态和阶段\n  status BiddingStatus @default(PENDING)\n  phase  BiddingPhase  @default(DISCUSSION)\n\n  // 讨论增强相关\n  enhancedByDiscussion Boolean @default(false) @map(\"enhanced_by_discussion\")\n  discussionId         String? @map(\"discussion_id\")\n  enhancementScore     Float   @default(0.0) @map(\"enhancement_score\")\n\n  // 参与统计\n  participantCount  Int @default(0) @map(\"participant_count\")\n  viewerCount       Int @default(0) @map(\"viewer_count\")\n  maxViewerCount    Int @default(0) @map(\"max_viewer_count\")\n  totalInteractions Int @default(0) @map(\"total_interactions\")\n\n  // 时间控制\n  durationSeconds    Int @default(900) @map(\"duration_seconds\") // 15分钟\n  discussionDuration Int @default(600) @map(\"discussion_duration\") // 10分钟\n  biddingDuration    Int @default(900) @map(\"bidding_duration\") // 15分钟\n\n  // 时间�?\n  startedAt           DateTime? @map(\"started_at\")\n  endedAt             DateTime? @map(\"ended_at\")\n  discussionStartedAt DateTime? @map(\"discussion_started_at\")\n  biddingStartedAt    DateTime? @map(\"bidding_started_at\")\n  createdAt           DateTime  @default(now()) @map(\"created_at\")\n  updatedAt           DateTime  @updatedAt @map(\"updated_at\")\n\n  // 性能和质量指�?\n  avgResponseTime     Float @default(0) @map(\"avg_response_time\")\n  aiServiceCost       Float @default(0) @map(\"ai_service_cost\")\n  userEngagementScore Float @default(0) @map(\"user_engagement_score\")\n  contentQualityScore Float @default(0) @map(\"content_quality_score\")\n\n  // 关联关系\n  idea         Idea                  @relation(fields: [ideaId], references: [id])\n  user         User?                 @relation(fields: [userId], references: [id])\n  discussion   IdeaDiscussion?       @relation(\"IdeaDiscussionBidding\", fields: [discussionId], references: [id])\n  bids         Bid[]\n  priceGuesses PriceGuess[]\n  interactions AIInteraction[]\n  behaviors    UserBiddingBehavior[]\n\n  @@index([status, createdAt])\n  @@index([ideaId, status])\n  @@index([userId, status])\n  @@map(\"bidding_sessions\")\n}\n\n// 竞价状态枚�?\nenum BiddingStatus {\n  PENDING // 等待开�?\n  ACTIVE // 进行�?\n  ENDED // 已结�?\n  CANCELLED // 已取�?\n  FAILED // 失败\n}\n\n// 竞价阶段枚举\nenum BiddingPhase {\n  DISCUSSION // 讨论阶段\n  BIDDING // 竞价阶段\n  RESULTS // 结果阶段\n}\n\n// AI出价记录�?- 生产级增强版\nmodel Bid {\n  id         String  @id @default(cuid())\n  sessionId  String  @map(\"session_id\")\n  agentName  String  @map(\"agent_name\")\n  agentType  String  @map(\"agent_type\")\n  amount     Int\n  comment    String?\n  confidence Float?\n\n  // AI决策数据\n  analysisData   Json?   @map(\"analysis_data\")\n  reasoning      String? // 出价理由\n  emotionalState String  @default(\"neutral\") @map(\"emotional_state\")\n\n  // 生成相关\n  isScripted     Boolean @default(true) @map(\"is_scripted\")\n  aiServiceUsed  String? @map(\"ai_service_used\")\n  generationCost Float   @default(0) @map(\"generation_cost\")\n  responseTimeMs Int     @default(0) @map(\"response_time_ms\")\n  qualityScore   Float   @default(0) @map(\"quality_score\")\n\n  // 理解深度（讨论增强相关）\n  understandingDepth Float @default(0.5) @map(\"understanding_depth\")\n  contextRichness    Float @default(0.5) @map(\"context_richness\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  session BiddingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n\n  @@index([sessionId, createdAt])\n  @@index([agentName, createdAt])\n  @@map(\"bids\")\n}\n\n// 用户价格竞猜�?- 生产级增强版\nmodel PriceGuess {\n  id           String @id @default(cuid())\n  sessionId    String @map(\"session_id\")\n  userId       String @map(\"user_id\")\n  guessedPrice Int    @map(\"guessed_price\")\n  confidence   Float\n  stakeAmount  Int    @default(10) @map(\"stake_amount\")\n\n  // 结果和奖�?\n  actualPrice Int?   @map(\"actual_price\")\n  accuracy    Float? // 准确度百分比\n  reward      Int? // 获得的奖励积�?\n\n  // 增强信息\n  basedOnDiscussion         Boolean @default(false) @map(\"based_on_discussion\")\n  predictionConfidenceBonus Float   @default(0.0) @map(\"prediction_confidence_bonus\")\n\n  // 用户行为数据\n  timeSpentMs     Int? @map(\"time_spent_ms\")\n  adjustmentCount Int  @default(0) @map(\"adjustment_count\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  session BiddingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n  user    User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([sessionId, userId])\n  @@index([userId, createdAt])\n  @@map(\"price_guesses\")\n}\n\n// AI交流记录�?- 生产级增强版\nmodel AIInteraction {\n  id        String @id @default(cuid())\n  sessionId String @map(\"session_id\")\n  agentName String @map(\"agent_name\")\n  agentType String @map(\"agent_type\")\n\n  // 交互分类\n  interactionType AIInteractionType @map(\"interaction_type\")\n  phase           String // 所属阶�?\n\n  // 内容和表�?\n  content   String\n  emotion   String @default(\"neutral\")\n  animation String @default(\"none\")\n\n  // 生成和质量控�?\n  isScripted     Boolean @default(true) @map(\"is_scripted\")\n  aiServiceUsed  String? @map(\"ai_service_used\")\n  generationCost Float   @default(0) @map(\"generation_cost\")\n  responseTimeMs Int     @default(0) @map(\"response_time_ms\")\n  qualityScore   Float   @default(0) @map(\"quality_score\")\n\n  // 用户反应统计\n  userReactions   Json  @default(\"{}\") @map(\"user_reactions\")\n  engagementScore Float @default(0) @map(\"engagement_score\")\n\n  // 特殊事件\n  isRandomEvent Boolean @default(false) @map(\"is_random_event\")\n  eventType     String? @map(\"event_type\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  session BiddingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n\n  @@index([sessionId, createdAt])\n  @@index([agentName, createdAt])\n  @@map(\"ai_interactions\")\n}\n\n// AI交互类型枚举\nenum AIInteractionType {\n  opening // 开场分�?\n  bid_reaction // 出价反应\n  psychology // 心理�?\n  result // 结果点评\n  glitch // 故障事件\n  mimicry // 模仿游戏\n  conflict // 冲突对话\n  alliance // 联盟形成\n  breakdown // 人设崩坏\n  user_response // 用户互动回应\n}\n\n// 用户竞价行为追踪�?- 新增\nmodel UserBiddingBehavior {\n  id         String            @id @default(cuid())\n  sessionId  String            @map(\"session_id\")\n  userId     String            @map(\"user_id\")\n  actionType UserBiddingAction @map(\"action_type\")\n  actionData Json?             @map(\"action_data\")\n  timestamp  DateTime          @default(now())\n\n  // 行为上下�?\n  phase     String? // 发生在哪个阶�?\n  agentName String? @map(\"agent_name\") // 相关的AI\n\n  session BiddingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n  user    User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([sessionId, timestamp])\n  @@index([userId, timestamp])\n  @@map(\"user_bidding_behaviors\")\n}\n\n// 用户竞价行为枚举\nenum UserBiddingAction {\n  enter_session // 进入会话\n  leave_session // 离开会话\n  support_agent // 支持某个AI\n  react_to_dialogue // 对对话做出反�?\n  submit_guess // 提交价格预测\n  adjust_guess // 调整预测\n  share_session // 分享会话\n  report_issue // 报告问题\n}\n\n// AI服务使用统计�?- 新增\nmodel AIServiceUsage {\n  id          String  @id @default(cuid())\n  sessionId   String? @map(\"session_id\")\n  agentName   String? @map(\"agent_name\")\n  serviceName String  @map(\"service_name\") // deepseek, zhipu, etc.\n  modelName   String? @map(\"model_name\")\n\n  // 使用量统�?\n  promptTokens     Int @map(\"prompt_tokens\")\n  completionTokens Int @map(\"completion_tokens\")\n  totalTokens      Int @map(\"total_tokens\")\n  requestCount     Int @default(1) @map(\"request_count\")\n\n  // 成本和性能\n  totalCost      Float @map(\"total_cost\")\n  responseTimeMs Int   @map(\"response_time_ms\")\n\n  // 质量评估\n  qualityRating    Float? @map(\"quality_rating\")\n  userSatisfaction Float? @map(\"user_satisfaction\")\n\n  // 错误和重�?\n  errorCount Int @default(0) @map(\"error_count\")\n  retryCount Int @default(0) @map(\"retry_count\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  date      DateTime @default(now()) // 按天统计\n\n  @@index([serviceName, date])\n  @@index([sessionId, createdAt])\n  @@map(\"ai_service_usage\")\n}\n\n// 用户成就�?- 新增\nmodel UserAchievement {\n  id              String   @id @default(cuid())\n  userId          String   @map(\"user_id\")\n  achievementId   String   @map(\"achievement_id\")\n  achievementName String   @map(\"achievement_name\")\n  description     String\n  category        String\n  bonusPoints     Int      @map(\"bonus_points\")\n  earnedAt        DateTime @default(now()) @map(\"earned_at\")\n\n  // 成就数据\n  progressData Json?   @map(\"progress_data\")\n  isRare       Boolean @default(false) @map(\"is_rare\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, achievementId])\n  @@index([userId, earnedAt])\n  @@map(\"user_achievements\")\n}\n\n// ==================== 原有业务表继续保�?====================\n\n// 调研报告�?\nmodel ResearchReport {\n  id     String @id @default(cuid())\n  ideaId String @map(\"idea_id\")\n  userId String @map(\"user_id\")\n\n  // 报告内容\n  reportData Json    @map(\"report_data\") // 存储完整的调研指导结�?\n  summary    String? // 报告摘要\n\n  // AI专家分析结果\n  basicAnalysis   Json? @map(\"basic_analysis\") // 基本盘分析结�?\n  researchMethods Json? @map(\"research_methods\") // 调研方法指导\n  dataSources     Json? @map(\"data_sources\") // 数据源推�?\n  mvpGuidance     Json? @map(\"mvp_guidance\") // MVP验证指导\n  businessModel   Json? @map(\"business_model\") // 商业模式指导\n\n  // 生成状�?\n  status   ReportStatus @default(GENERATING)\n  progress Int          @default(0) // 生成进度 0-100\n\n  // 成本信息\n  creditsCost Int @map(\"credits_cost\") // 消耗的积分\n\n  // 时间�?\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  updatedAt   DateTime  @updatedAt @map(\"updated_at\")\n  completedAt DateTime? @map(\"completed_at\")\n\n  // 关联关系\n  idea Idea @relation(fields: [ideaId], references: [id], onDelete: Cascade)\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"research_reports\")\n}\n\n// 报告状态枚�?\nenum ReportStatus {\n  GENERATING\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n\n// 积分交易�?\nmodel CreditTransaction {\n  id     String                @id @default(cuid())\n  userId String                @map(\"user_id\")\n  amount Int // 正数为收入，负数为支�?\n  type   CreditTransactionType\n\n  // 交易详情\n  description String?\n  relatedId   String? @map(\"related_id\") // 关联的业务ID（如报告ID、支付ID等）\n\n  // 余额快照\n  balanceBefore Int @map(\"balance_before\")\n  balanceAfter  Int @map(\"balance_after\")\n\n  // 时间�?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // 关联关系\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"credit_transactions\")\n}\n\n// 积分交易类型枚举\nenum CreditTransactionType {\n  REGISTER_BONUS // 注册奖励\n  PURCHASE // 购买积分\n  RESEARCH_COST // 调研指导消费\n  REFUND // 退�?\n  ADMIN_ADJUSTMENT // 管理员调�?\n  WITHDRAW // 提现\n}\n\n// 支付�?\nmodel Payment {\n  id     String @id @default(cuid())\n  userId String @map(\"user_id\")\n\n  // 支付信息\n  outTradeNo  String @unique @map(\"out_trade_no\") // 商户订单�?\n  amount      Float // 支付金额（元�?\n  credits     Int // 对应积分数量\n  description String // 支付描述\n  currency    String @default(\"CNY\")\n\n  // 支付渠道\n  provider        String // 支付提供商（ALIPAY/WECHAT�?\n  providerOrderId String? @map(\"provider_order_id\") // 第三方订单号\n\n  // 支付URL和二维码\n  payUrl    String? @map(\"pay_url\")\n  qrCodeUrl String? @map(\"qr_code_url\")\n\n  // 支付状�?\n  status String @default(\"PENDING\") // PENDING/SUCCESS/FAILED/CANCELLED/REFUNDED\n\n  // 时间�?\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  updatedAt DateTime  @updatedAt @map(\"updated_at\")\n  paidAt    DateTime? @map(\"paid_at\")\n  expiredAt DateTime  @map(\"expired_at\") // 支付过期时间\n\n  // 关联关系\n  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  refunds Refund[]\n\n  @@map(\"payments\")\n}\n\n// 退款表\nmodel Refund {\n  id        String @id @default(cuid())\n  paymentId String @map(\"payment_id\")\n\n  // 退款信�?\n  outRefundNo  String @unique @map(\"out_refund_no\") // 商户退款单�?\n  refundAmount Float  @map(\"refund_amount\") // 退款金�?\n  reason       String // 退款原�?\n\n  // 退款状�?\n  status           String  @default(\"PROCESSING\") // PROCESSING/SUCCESS/FAILED\n  providerRefundId String? @map(\"provider_refund_id\") // 第三方退款单�?\n\n  // 操作信息\n  operatorId String @map(\"operator_id\") // 操作员ID\n\n  // 时间�?\n  createdAt  DateTime  @default(now()) @map(\"created_at\")\n  updatedAt  DateTime  @updatedAt @map(\"updated_at\")\n  refundedAt DateTime? @map(\"refunded_at\")\n\n  // 关联关系\n  payment Payment @relation(fields: [paymentId], references: [id], onDelete: Cascade)\n\n  @@map(\"refunds\")\n}\n\n// 文件�?\nmodel File {\n  id     String @id @default(cuid())\n  userId String @map(\"user_id\")\n\n  // 文件信息\n  filename     String // 存储的文件名\n  originalName String @map(\"original_name\") // 原始文件�?\n  key          String @unique // OSS存储key\n  url          String // 访问URL\n  size         Int // 文件大小（字节）\n  contentType  String @map(\"content_type\") // MIME类型\n\n  // 文件分类\n  type   String @default(\"OTHER\") // IMAGE/DOCUMENT/AVATAR/REPORT/OTHER\n  status String @default(\"UPLOADED\") // UPLOADING/UPLOADED/FAILED/DELETED\n\n  // 元数�?\n  metadata Json? // 存储额外信息（如图片尺寸、处理参数等�?\n\n  // 时间�?\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  updatedAt DateTime  @updatedAt @map(\"updated_at\")\n  deletedAt DateTime? @map(\"deleted_at\")\n\n  // 关联关系\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"files\")\n}\n\n// 系统配置�?\nmodel SystemConfig {\n  id          String   @id @default(cuid())\n  key         String   @unique\n  value       String\n  description String?\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"system_configs\")\n}\n\n// AI服务使用统计�?\nmodel AIUsageStats {\n  id           String   @id @default(cuid())\n  provider     String // AI服务提供商（百度、阿里、讯飞等�?\n  model        String // 模型名称\n  requestCount Int      @default(0) @map(\"request_count\")\n  totalTokens  Int      @default(0) @map(\"total_tokens\")\n  totalCost    Float    @default(0) @map(\"total_cost\")\n  date         DateTime\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@unique([provider, model, date])\n  @@map(\"ai_usage_stats\")\n}\n\n// 创意讨论会话�?\nmodel IdeaDiscussion {\n  id     String @id @default(cuid())\n  ideaId String @map(\"idea_id\")\n  userId String @map(\"user_id\")\n\n  // 讨论状�?\n  status       DiscussionStatus @default(ACTIVE)\n  currentRound Int              @default(1) @map(\"current_round\") // 当前轮数 1-3\n  totalRounds  Int              @default(3) @map(\"total_rounds\") // 总轮数限�?\n\n  // AI Agent信息\n  aiAgentType String @map(\"ai_agent_type\") // 分配的AI专家类型\n  aiAgentName String @map(\"ai_agent_name\") // AI专家名称\n\n  // 时间�?\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  updatedAt   DateTime  @updatedAt @map(\"updated_at\")\n  completedAt DateTime? @map(\"completed_at\")\n\n  // 关联关系\n  idea            Idea                @relation(fields: [ideaId], references: [id], onDelete: Cascade)\n  user            User                @relation(fields: [userId], references: [id], onDelete: Cascade)\n  messages        DiscussionMessage[]\n  biddingSessions BiddingSession[]    @relation(\"IdeaDiscussionBidding\")\n\n  @@map(\"idea_discussions\")\n}\n\n// 讨论状态枚�?\nenum DiscussionStatus {\n  ACTIVE // 进行�?\n  COMPLETED // 已完�?\n  EXPIRED // 已过�?\n  CANCELLED // 已取�?\n}\n\n// 讨论消息�?\nmodel DiscussionMessage {\n  id           String @id @default(cuid())\n  discussionId String @map(\"discussion_id\")\n\n  // 消息内容\n  content     String // 消息内容\n  messageType MessageType @map(\"message_type\") // 消息类型\n  roundNumber Int         @map(\"round_number\") // 所属轮�?\n\n  // 发送者信�?\n  senderType SenderType @map(\"sender_type\") // 发送者类�?\n  senderName String?    @map(\"sender_name\") // 发送者名�?\n\n  // AI分析结果（仅AI消息有）\n  analysisData Json? @map(\"analysis_data\") // AI分析数据\n  suggestions  Json? // AI建议\n\n  // 时间�?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // 关联关系\n  discussion IdeaDiscussion @relation(fields: [discussionId], references: [id], onDelete: Cascade)\n\n  @@map(\"discussion_messages\")\n}\n\n// 消息类型枚举\nenum MessageType {\n  INITIAL_ANALYSIS // 初始分析\n  CLARIFICATION_REQUEST // 澄清问题\n  USER_RESPONSE // 用户回应\n  IMPROVEMENT_SUGGESTION // 改进建议\n  FINAL_ASSESSMENT // 最终评�?\n}\n\n// 发送者类型枚�?\nenum SenderType {\n  USER // 用户\n  AI_AGENT // AI专家\n}\n\n// 订单�?\nmodel Order {\n  id     String @id @default(cuid())\n  userId String @map(\"user_id\")\n\n  // 订单信息\n  amount      Float // 订单金额\n  currency    String      @default(\"CNY\")\n  description String // 订单描述\n  status      OrderStatus @default(PENDING)\n\n  // 支付信息\n  paymentMethod String? @map(\"payment_method\") // 支付方式\n  paymentId     String? @map(\"payment_id\") // 关联支付ID\n\n  // 时间�?\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  updatedAt DateTime  @updatedAt @map(\"updated_at\")\n  paidAt    DateTime? @map(\"paid_at\")\n\n  // 关联关系\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"orders\")\n}\n\n// 订单状态枚�?\nenum OrderStatus {\n  PENDING\n  PAID\n  CANCELLED\n  REFUNDED\n}\n\n// 购物车表\nmodel CartItem {\n  id      String @id @default(cuid())\n  userId  String @map(\"user_id\")\n  agentId String @map(\"agent_id\") // 关联的AI Agent ID\n\n  // 商品信息\n  price    Float? // 价格\n  quantity Int    @default(1)\n\n  // 时间�?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // 关联关系\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"cart_items\")\n}\n\n// AI Agent�?\nmodel Agent {\n  id          String      @id @default(cuid())\n  name        String // Agent名称\n  description String // Agent描述\n  type        AgentType // Agent类型\n  status      AgentStatus @default(ACTIVE)\n\n  // 定价信息\n  price   Float? // 价格\n  credits Int? // 所需积分\n\n  // 时间�?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"agents\")\n}\n\n// Agent类型枚举\nenum AgentType {\n  CREATIVE\n  ANALYTICAL\n  TECHNICAL\n  BUSINESS\n  MARKETING\n}\n\n// Agent状态枚�?\nenum AgentStatus {\n  ACTIVE\n  INACTIVE\n  MAINTENANCE\n}\n",
  "inlineSchemaHash": "9d7b62354aa5ff8467226ef599202dece2c06a5925ccd2ae29695c2c5afb6847",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_email_verified\"},{\"name\":\"isPhoneVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_phone_verified\"},{\"name\":\"credits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"UserLevel\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_spent\"},{\"name\":\"totalEarned\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_earned\"},{\"name\":\"totalGuesses\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_guesses\"},{\"name\":\"guessAccuracy\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"guess_accuracy\"},{\"name\":\"guessEarnings\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"guess_earnings\"},{\"name\":\"guessLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"guess_level\"},{\"name\":\"levelProgress\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"level_progress\"},{\"name\":\"consecutiveGuesses\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"consecutive_guesses\"},{\"name\":\"bestStreak\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"best_streak\"},{\"name\":\"favoriteAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"favorite_agent\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_notifications\"},{\"name\":\"marketingEmails\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"marketing_emails\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_login_at\"},{\"name\":\"ideas\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"IdeaToUser\"},{\"name\":\"researchReports\",\"kind\":\"object\",\"type\":\"ResearchReport\",\"relationName\":\"ResearchReportToUser\"},{\"name\":\"creditTransactions\",\"kind\":\"object\",\"type\":\"CreditTransaction\",\"relationName\":\"CreditTransactionToUser\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"UserSession\",\"relationName\":\"UserToUserSession\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"FileToUser\"},{\"name\":\"discussions\",\"kind\":\"object\",\"type\":\"IdeaDiscussion\",\"relationName\":\"IdeaDiscussionToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToUser\"},{\"name\":\"biddingSessions\",\"kind\":\"object\",\"type\":\"BiddingSession\",\"relationName\":\"BiddingSessionToUser\"},{\"name\":\"priceGuesses\",\"kind\":\"object\",\"type\":\"PriceGuess\",\"relationName\":\"PriceGuessToUser\"},{\"name\":\"biddingBehaviors\",\"kind\":\"object\",\"type\":\"UserBiddingBehavior\",\"relationName\":\"UserToUserBiddingBehavior\"},{\"name\":\"achievements\",\"kind\":\"object\",\"type\":\"UserAchievement\",\"relationName\":\"UserToUserAchievement\"}],\"dbName\":\"users\"},\"UserSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSession\"}],\"dbName\":\"user_sessions\"},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"isRevoked\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_revoked\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":\"refresh_tokens\"},\"Idea\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"IdeaCategory\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"isAnonymous\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_anonymous\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"IdeaStatus\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"IdeaVisibility\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"view_count\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IdeaToUser\"},{\"name\":\"researchReports\",\"kind\":\"object\",\"type\":\"ResearchReport\",\"relationName\":\"IdeaToResearchReport\"},{\"name\":\"discussions\",\"kind\":\"object\",\"type\":\"IdeaDiscussion\",\"relationName\":\"IdeaToIdeaDiscussion\"},{\"name\":\"biddingSessions\",\"kind\":\"object\",\"type\":\"BiddingSession\",\"relationName\":\"BiddingSessionToIdea\"}],\"dbName\":\"ideas\"},\"BiddingSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ideaId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"idea_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"startPrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"start_price\"},{\"name\":\"currentHigh\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_high\"},{\"name\":\"winnerAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"winner_agent\"},{\"name\":\"winnerAgentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"winner_agent_type\"},{\"name\":\"finalPrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"final_price\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BiddingStatus\"},{\"name\":\"phase\",\"kind\":\"enum\",\"type\":\"BiddingPhase\"},{\"name\":\"enhancedByDiscussion\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"enhanced_by_discussion\"},{\"name\":\"discussionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"discussion_id\"},{\"name\":\"enhancementScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"enhancement_score\"},{\"name\":\"participantCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"participant_count\"},{\"name\":\"viewerCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"viewer_count\"},{\"name\":\"maxViewerCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_viewer_count\"},{\"name\":\"totalInteractions\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_interactions\"},{\"name\":\"durationSeconds\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"duration_seconds\"},{\"name\":\"discussionDuration\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"discussion_duration\"},{\"name\":\"biddingDuration\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bidding_duration\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"started_at\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"ended_at\"},{\"name\":\"discussionStartedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"discussion_started_at\"},{\"name\":\"biddingStartedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"bidding_started_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"avgResponseTime\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"avg_response_time\"},{\"name\":\"aiServiceCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"ai_service_cost\"},{\"name\":\"userEngagementScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"user_engagement_score\"},{\"name\":\"contentQualityScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"content_quality_score\"},{\"name\":\"idea\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"BiddingSessionToIdea\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BiddingSessionToUser\"},{\"name\":\"discussion\",\"kind\":\"object\",\"type\":\"IdeaDiscussion\",\"relationName\":\"IdeaDiscussionBidding\"},{\"name\":\"bids\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"BidToBiddingSession\"},{\"name\":\"priceGuesses\",\"kind\":\"object\",\"type\":\"PriceGuess\",\"relationName\":\"BiddingSessionToPriceGuess\"},{\"name\":\"interactions\",\"kind\":\"object\",\"type\":\"AIInteraction\",\"relationName\":\"AIInteractionToBiddingSession\"},{\"name\":\"behaviors\",\"kind\":\"object\",\"type\":\"UserBiddingBehavior\",\"relationName\":\"BiddingSessionToUserBiddingBehavior\"}],\"dbName\":\"bidding_sessions\"},\"Bid\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_id\"},{\"name\":\"agentName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agent_name\"},{\"name\":\"agentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agent_type\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"analysisData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"analysis_data\"},{\"name\":\"reasoning\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emotionalState\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"emotional_state\"},{\"name\":\"isScripted\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_scripted\"},{\"name\":\"aiServiceUsed\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ai_service_used\"},{\"name\":\"generationCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"generation_cost\"},{\"name\":\"responseTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"response_time_ms\"},{\"name\":\"qualityScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"quality_score\"},{\"name\":\"understandingDepth\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"understanding_depth\"},{\"name\":\"contextRichness\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"context_richness\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"BiddingSession\",\"relationName\":\"BidToBiddingSession\"}],\"dbName\":\"bids\"},\"PriceGuess\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"guessedPrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"guessed_price\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stakeAmount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"stake_amount\"},{\"name\":\"actualPrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"actual_price\"},{\"name\":\"accuracy\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"reward\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"basedOnDiscussion\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"based_on_discussion\"},{\"name\":\"predictionConfidenceBonus\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"prediction_confidence_bonus\"},{\"name\":\"timeSpentMs\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"time_spent_ms\"},{\"name\":\"adjustmentCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"adjustment_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"BiddingSession\",\"relationName\":\"BiddingSessionToPriceGuess\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PriceGuessToUser\"}],\"dbName\":\"price_guesses\"},\"AIInteraction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_id\"},{\"name\":\"agentName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agent_name\"},{\"name\":\"agentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agent_type\"},{\"name\":\"interactionType\",\"kind\":\"enum\",\"type\":\"AIInteractionType\",\"dbName\":\"interaction_type\"},{\"name\":\"phase\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emotion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"animation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isScripted\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_scripted\"},{\"name\":\"aiServiceUsed\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ai_service_used\"},{\"name\":\"generationCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"generation_cost\"},{\"name\":\"responseTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"response_time_ms\"},{\"name\":\"qualityScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"quality_score\"},{\"name\":\"userReactions\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"user_reactions\"},{\"name\":\"engagementScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"engagement_score\"},{\"name\":\"isRandomEvent\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_random_event\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"event_type\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"BiddingSession\",\"relationName\":\"AIInteractionToBiddingSession\"}],\"dbName\":\"ai_interactions\"},\"UserBiddingBehavior\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"actionType\",\"kind\":\"enum\",\"type\":\"UserBiddingAction\",\"dbName\":\"action_type\"},{\"name\":\"actionData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"action_data\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phase\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agent_name\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"BiddingSession\",\"relationName\":\"BiddingSessionToUserBiddingBehavior\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserBiddingBehavior\"}],\"dbName\":\"user_bidding_behaviors\"},\"AIServiceUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_id\"},{\"name\":\"agentName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agent_name\"},{\"name\":\"serviceName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"service_name\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_name\"},{\"name\":\"promptTokens\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"prompt_tokens\"},{\"name\":\"completionTokens\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"completion_tokens\"},{\"name\":\"totalTokens\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_tokens\"},{\"name\":\"requestCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"request_count\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"total_cost\"},{\"name\":\"responseTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"response_time_ms\"},{\"name\":\"qualityRating\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"quality_rating\"},{\"name\":\"userSatisfaction\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"user_satisfaction\"},{\"name\":\"errorCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"error_count\"},{\"name\":\"retryCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"retry_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"ai_service_usage\"},\"UserAchievement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"achievementId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"achievement_id\"},{\"name\":\"achievementName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"achievement_name\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bonusPoints\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bonus_points\"},{\"name\":\"earnedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"earned_at\"},{\"name\":\"progressData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"progress_data\"},{\"name\":\"isRare\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_rare\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserAchievement\"}],\"dbName\":\"user_achievements\"},\"ResearchReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ideaId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"idea_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"reportData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"report_data\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basicAnalysis\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"basic_analysis\"},{\"name\":\"researchMethods\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"research_methods\"},{\"name\":\"dataSources\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"data_sources\"},{\"name\":\"mvpGuidance\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"mvp_guidance\"},{\"name\":\"businessModel\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"business_model\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReportStatus\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsCost\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"credits_cost\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"idea\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"IdeaToResearchReport\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResearchReportToUser\"}],\"dbName\":\"research_reports\"},\"CreditTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CreditTransactionType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relatedId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"related_id\"},{\"name\":\"balanceBefore\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"balance_before\"},{\"name\":\"balanceAfter\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"balance_after\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreditTransactionToUser\"}],\"dbName\":\"credit_transactions\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"outTradeNo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"out_trade_no\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"credits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerOrderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_order_id\"},{\"name\":\"payUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"pay_url\"},{\"name\":\"qrCodeUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"qr_code_url\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"paid_at\"},{\"name\":\"expiredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expired_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentToUser\"},{\"name\":\"refunds\",\"kind\":\"object\",\"type\":\"Refund\",\"relationName\":\"PaymentToRefund\"}],\"dbName\":\"payments\"},\"Refund\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_id\"},{\"name\":\"outRefundNo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"out_refund_no\"},{\"name\":\"refundAmount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"refund_amount\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerRefundId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_refund_id\"},{\"name\":\"operatorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"operator_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"refundedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"refunded_at\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToRefund\"}],\"dbName\":\"refunds\"},\"File\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"original_name\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"content_type\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FileToUser\"}],\"dbName\":\"files\"},\"SystemConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"system_configs\"},\"AIUsageStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"request_count\"},{\"name\":\"totalTokens\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_tokens\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"total_cost\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"ai_usage_stats\"},\"IdeaDiscussion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ideaId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"idea_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DiscussionStatus\"},{\"name\":\"currentRound\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_round\"},{\"name\":\"totalRounds\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_rounds\"},{\"name\":\"aiAgentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ai_agent_type\"},{\"name\":\"aiAgentName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ai_agent_name\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"idea\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"IdeaToIdeaDiscussion\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IdeaDiscussionToUser\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"DiscussionMessage\",\"relationName\":\"DiscussionMessageToIdeaDiscussion\"},{\"name\":\"biddingSessions\",\"kind\":\"object\",\"type\":\"BiddingSession\",\"relationName\":\"IdeaDiscussionBidding\"}],\"dbName\":\"idea_discussions\"},\"DiscussionMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discussionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"discussion_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageType\",\"kind\":\"enum\",\"type\":\"MessageType\",\"dbName\":\"message_type\"},{\"name\":\"roundNumber\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"round_number\"},{\"name\":\"senderType\",\"kind\":\"enum\",\"type\":\"SenderType\",\"dbName\":\"sender_type\"},{\"name\":\"senderName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_name\"},{\"name\":\"analysisData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"analysis_data\"},{\"name\":\"suggestions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"discussion\",\"kind\":\"object\",\"type\":\"IdeaDiscussion\",\"relationName\":\"DiscussionMessageToIdeaDiscussion\"}],\"dbName\":\"discussion_messages\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_method\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"paid_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"}],\"dbName\":\"orders\"},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agent_id\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartItemToUser\"}],\"dbName\":\"cart_items\"},\"Agent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"AgentType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AgentStatus\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"credits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"agents\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

