
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  avatar: 'avatar',
  bio: 'bio',
  status: 'status',
  role: 'role',
  isEmailVerified: 'isEmailVerified',
  isPhoneVerified: 'isPhoneVerified',
  credits: 'credits',
  level: 'level',
  totalSpent: 'totalSpent',
  totalEarned: 'totalEarned',
  emailNotifications: 'emailNotifications',
  marketingEmails: 'marketingEmails',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastLoginAt: 'lastLoginAt'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  isRevoked: 'isRevoked',
  createdAt: 'createdAt'
};

exports.Prisma.IdeaScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  category: 'category',
  tags: 'tags',
  userId: 'userId',
  isAnonymous: 'isAnonymous',
  status: 'status',
  visibility: 'visibility',
  viewCount: 'viewCount',
  likeCount: 'likeCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ResearchReportScalarFieldEnum = {
  id: 'id',
  ideaId: 'ideaId',
  userId: 'userId',
  reportData: 'reportData',
  summary: 'summary',
  basicAnalysis: 'basicAnalysis',
  researchMethods: 'researchMethods',
  dataSources: 'dataSources',
  mvpGuidance: 'mvpGuidance',
  businessModel: 'businessModel',
  status: 'status',
  progress: 'progress',
  creditsCost: 'creditsCost',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt'
};

exports.Prisma.CreditTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  amount: 'amount',
  type: 'type',
  description: 'description',
  relatedId: 'relatedId',
  balanceBefore: 'balanceBefore',
  balanceAfter: 'balanceAfter',
  createdAt: 'createdAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  outTradeNo: 'outTradeNo',
  amount: 'amount',
  credits: 'credits',
  description: 'description',
  currency: 'currency',
  provider: 'provider',
  providerOrderId: 'providerOrderId',
  payUrl: 'payUrl',
  qrCodeUrl: 'qrCodeUrl',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paidAt: 'paidAt',
  expiredAt: 'expiredAt'
};

exports.Prisma.RefundScalarFieldEnum = {
  id: 'id',
  paymentId: 'paymentId',
  outRefundNo: 'outRefundNo',
  refundAmount: 'refundAmount',
  reason: 'reason',
  status: 'status',
  providerRefundId: 'providerRefundId',
  operatorId: 'operatorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  refundedAt: 'refundedAt'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  filename: 'filename',
  originalName: 'originalName',
  key: 'key',
  url: 'url',
  size: 'size',
  contentType: 'contentType',
  type: 'type',
  status: 'status',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.SystemConfigScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AIUsageStatsScalarFieldEnum = {
  id: 'id',
  provider: 'provider',
  model: 'model',
  requestCount: 'requestCount',
  totalTokens: 'totalTokens',
  totalCost: 'totalCost',
  date: 'date',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IdeaDiscussionScalarFieldEnum = {
  id: 'id',
  ideaId: 'ideaId',
  userId: 'userId',
  status: 'status',
  currentRound: 'currentRound',
  totalRounds: 'totalRounds',
  aiAgentType: 'aiAgentType',
  aiAgentName: 'aiAgentName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt'
};

exports.Prisma.DiscussionMessageScalarFieldEnum = {
  id: 'id',
  discussionId: 'discussionId',
  content: 'content',
  messageType: 'messageType',
  roundNumber: 'roundNumber',
  senderType: 'senderType',
  senderName: 'senderName',
  analysisData: 'analysisData',
  suggestions: 'suggestions',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.UserStatus = exports.$Enums.UserStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  BANNED: 'BANNED'
};

exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

exports.UserLevel = exports.$Enums.UserLevel = {
  BRONZE: 'BRONZE',
  SILVER: 'SILVER',
  GOLD: 'GOLD',
  PLATINUM: 'PLATINUM',
  DIAMOND: 'DIAMOND'
};

exports.IdeaCategory = exports.$Enums.IdeaCategory = {
  TECH: 'TECH',
  LIFESTYLE: 'LIFESTYLE',
  EDUCATION: 'EDUCATION',
  HEALTH: 'HEALTH',
  FINANCE: 'FINANCE',
  ENTERTAINMENT: 'ENTERTAINMENT',
  BUSINESS: 'BUSINESS',
  RETAIL: 'RETAIL',
  OTHER: 'OTHER'
};

exports.IdeaStatus = exports.$Enums.IdeaStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  ARCHIVED: 'ARCHIVED'
};

exports.IdeaVisibility = exports.$Enums.IdeaVisibility = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE',
  UNLISTED: 'UNLISTED'
};

exports.ReportStatus = exports.$Enums.ReportStatus = {
  GENERATING: 'GENERATING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.CreditTransactionType = exports.$Enums.CreditTransactionType = {
  REGISTER_BONUS: 'REGISTER_BONUS',
  PURCHASE: 'PURCHASE',
  RESEARCH_COST: 'RESEARCH_COST',
  REFUND: 'REFUND',
  ADMIN_ADJUSTMENT: 'ADMIN_ADJUSTMENT',
  WITHDRAW: 'WITHDRAW'
};

exports.DiscussionStatus = exports.$Enums.DiscussionStatus = {
  ACTIVE: 'ACTIVE',
  COMPLETED: 'COMPLETED',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

exports.MessageType = exports.$Enums.MessageType = {
  INITIAL_ANALYSIS: 'INITIAL_ANALYSIS',
  CLARIFICATION_REQUEST: 'CLARIFICATION_REQUEST',
  USER_RESPONSE: 'USER_RESPONSE',
  IMPROVEMENT_SUGGESTION: 'IMPROVEMENT_SUGGESTION',
  FINAL_ASSESSMENT: 'FINAL_ASSESSMENT'
};

exports.SenderType = exports.$Enums.SenderType = {
  USER: 'USER',
  AI_AGENT: 'AI_AGENT'
};

exports.Prisma.ModelName = {
  User: 'User',
  UserSession: 'UserSession',
  RefreshToken: 'RefreshToken',
  Idea: 'Idea',
  ResearchReport: 'ResearchReport',
  CreditTransaction: 'CreditTransaction',
  Payment: 'Payment',
  Refund: 'Refund',
  File: 'File',
  SystemConfig: 'SystemConfig',
  AIUsageStats: 'AIUsageStats',
  IdeaDiscussion: 'IdeaDiscussion',
  DiscussionMessage: 'DiscussionMessage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\ai\\AIagentshichang\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\ai\\AIagentshichang\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// AI创意调研平台数据库模式\n// 支持用户管理、创意提交、调研指导、积分系统等核心功能\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// 用户表\nmodel User {\n  id           String  @id @default(cuid())\n  email        String  @unique\n  username     String  @unique\n  passwordHash String  @map(\"password_hash\")\n  firstName    String? @map(\"first_name\")\n  lastName     String? @map(\"last_name\")\n  phone        String? @unique\n  avatar       String?\n  bio          String?\n\n  // 用户状态\n  status          UserStatus @default(ACTIVE)\n  role            UserRole   @default(USER)\n  isEmailVerified Boolean    @default(false) @map(\"is_email_verified\")\n  isPhoneVerified Boolean    @default(false) @map(\"is_phone_verified\")\n\n  // 积分和等级\n  credits     Int       @default(1000) // 注册赠送1000积分\n  level       UserLevel @default(BRONZE)\n  totalSpent  Int       @default(0) @map(\"total_spent\")\n  totalEarned Int       @default(0) @map(\"total_earned\")\n\n  // 通知设置\n  emailNotifications Boolean @default(true) @map(\"email_notifications\")\n  marketingEmails    Boolean @default(false) @map(\"marketing_emails\")\n\n  // 时间戳\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  updatedAt   DateTime  @updatedAt @map(\"updated_at\")\n  lastLoginAt DateTime? @map(\"last_login_at\")\n\n  // 关联关系\n  ideas              Idea[]\n  researchReports    ResearchReport[]\n  creditTransactions CreditTransaction[]\n  payments           Payment[]\n  sessions           UserSession[]\n  refreshTokens      RefreshToken[]\n  files              File[]\n  discussions        IdeaDiscussion[]\n\n  @@map(\"users\")\n}\n\n// 用户状态枚举\nenum UserStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n  BANNED\n}\n\n// 用户角色枚举\nenum UserRole {\n  USER\n  ADMIN\n  MODERATOR\n}\n\n// 用户等级枚举\nenum UserLevel {\n  BRONZE\n  SILVER\n  GOLD\n  PLATINUM\n  DIAMOND\n}\n\n// 用户会话表\nmodel UserSession {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  token     String   @unique\n  ipAddress String?  @map(\"ip_address\")\n  userAgent String?  @map(\"user_agent\")\n  expiresAt DateTime @map(\"expires_at\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_sessions\")\n}\n\n// 刷新令牌表\nmodel RefreshToken {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  token     String   @unique\n  expiresAt DateTime @map(\"expires_at\")\n  isRevoked Boolean  @default(false) @map(\"is_revoked\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"refresh_tokens\")\n}\n\n// 创意表\nmodel Idea {\n  id          String       @id @default(cuid())\n  title       String\n  description String\n  category    IdeaCategory\n  tags        String       @default(\"\") // 标签，用逗号分隔\n\n  // 提交者信息\n  userId      String  @map(\"user_id\")\n  isAnonymous Boolean @default(false) @map(\"is_anonymous\")\n\n  // 状态管理\n  status     IdeaStatus     @default(PENDING)\n  visibility IdeaVisibility @default(PUBLIC)\n\n  // 统计数据\n  viewCount Int @default(0) @map(\"view_count\")\n  likeCount Int @default(0) @map(\"like_count\")\n\n  // 时间戳\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // 关联关系\n  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)\n  researchReports ResearchReport[]\n  discussions     IdeaDiscussion[]\n\n  @@map(\"ideas\")\n}\n\n// 创意分类枚举\nenum IdeaCategory {\n  TECH\n  LIFESTYLE\n  EDUCATION\n  HEALTH\n  FINANCE\n  ENTERTAINMENT\n  BUSINESS\n  RETAIL\n  OTHER\n}\n\n// 创意状态枚举\nenum IdeaStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  ARCHIVED\n}\n\n// 创意可见性枚举\nenum IdeaVisibility {\n  PUBLIC\n  PRIVATE\n  UNLISTED\n}\n\n// 调研报告表\nmodel ResearchReport {\n  id     String @id @default(cuid())\n  ideaId String @map(\"idea_id\")\n  userId String @map(\"user_id\")\n\n  // 报告内容\n  reportData Json    @map(\"report_data\") // 存储完整的调研指导结果\n  summary    String? // 报告摘要\n\n  // AI专家分析结果\n  basicAnalysis   Json? @map(\"basic_analysis\") // 基本盘分析结果\n  researchMethods Json? @map(\"research_methods\") // 调研方法指导\n  dataSources     Json? @map(\"data_sources\") // 数据源推荐\n  mvpGuidance     Json? @map(\"mvp_guidance\") // MVP验证指导\n  businessModel   Json? @map(\"business_model\") // 商业模式指导\n\n  // 生成状态\n  status   ReportStatus @default(GENERATING)\n  progress Int          @default(0) // 生成进度 0-100\n\n  // 成本信息\n  creditsCost Int @map(\"credits_cost\") // 消耗的积分\n\n  // 时间戳\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  updatedAt   DateTime  @updatedAt @map(\"updated_at\")\n  completedAt DateTime? @map(\"completed_at\")\n\n  // 关联关系\n  idea Idea @relation(fields: [ideaId], references: [id], onDelete: Cascade)\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"research_reports\")\n}\n\n// 报告状态枚举\nenum ReportStatus {\n  GENERATING\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n\n// 积分交易表\nmodel CreditTransaction {\n  id     String                @id @default(cuid())\n  userId String                @map(\"user_id\")\n  amount Int // 正数为收入，负数为支出\n  type   CreditTransactionType\n\n  // 交易详情\n  description String?\n  relatedId   String? @map(\"related_id\") // 关联的业务ID（如报告ID、支付ID等）\n\n  // 余额快照\n  balanceBefore Int @map(\"balance_before\")\n  balanceAfter  Int @map(\"balance_after\")\n\n  // 时间戳\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // 关联关系\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"credit_transactions\")\n}\n\n// 积分交易类型枚举\nenum CreditTransactionType {\n  REGISTER_BONUS // 注册奖励\n  PURCHASE // 购买积分\n  RESEARCH_COST // 调研指导消费\n  REFUND // 退款\n  ADMIN_ADJUSTMENT // 管理员调整\n  WITHDRAW // 提现\n}\n\n// 支付表\nmodel Payment {\n  id     String @id @default(cuid())\n  userId String @map(\"user_id\")\n\n  // 支付信息\n  outTradeNo  String @unique @map(\"out_trade_no\") // 商户订单号\n  amount      Float // 支付金额（元）\n  credits     Int // 对应积分数量\n  description String // 支付描述\n  currency    String @default(\"CNY\")\n\n  // 支付渠道\n  provider        String // 支付提供商（ALIPAY/WECHAT）\n  providerOrderId String? @map(\"provider_order_id\") // 第三方订单号\n\n  // 支付URL和二维码\n  payUrl    String? @map(\"pay_url\")\n  qrCodeUrl String? @map(\"qr_code_url\")\n\n  // 支付状态\n  status String @default(\"PENDING\") // PENDING/SUCCESS/FAILED/CANCELLED/REFUNDED\n\n  // 时间戳\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  updatedAt DateTime  @updatedAt @map(\"updated_at\")\n  paidAt    DateTime? @map(\"paid_at\")\n  expiredAt DateTime  @map(\"expired_at\") // 支付过期时间\n\n  // 关联关系\n  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  refunds Refund[]\n\n  @@map(\"payments\")\n}\n\n// 退款表\nmodel Refund {\n  id        String @id @default(cuid())\n  paymentId String @map(\"payment_id\")\n\n  // 退款信息\n  outRefundNo  String @unique @map(\"out_refund_no\") // 商户退款单号\n  refundAmount Float  @map(\"refund_amount\") // 退款金额\n  reason       String // 退款原因\n\n  // 退款状态\n  status           String  @default(\"PROCESSING\") // PROCESSING/SUCCESS/FAILED\n  providerRefundId String? @map(\"provider_refund_id\") // 第三方退款单号\n\n  // 操作信息\n  operatorId String @map(\"operator_id\") // 操作员ID\n\n  // 时间戳\n  createdAt  DateTime  @default(now()) @map(\"created_at\")\n  updatedAt  DateTime  @updatedAt @map(\"updated_at\")\n  refundedAt DateTime? @map(\"refunded_at\")\n\n  // 关联关系\n  payment Payment @relation(fields: [paymentId], references: [id], onDelete: Cascade)\n\n  @@map(\"refunds\")\n}\n\n// 文件表\nmodel File {\n  id     String @id @default(cuid())\n  userId String @map(\"user_id\")\n\n  // 文件信息\n  filename     String // 存储的文件名\n  originalName String @map(\"original_name\") // 原始文件名\n  key          String @unique // OSS存储key\n  url          String // 访问URL\n  size         Int // 文件大小（字节）\n  contentType  String @map(\"content_type\") // MIME类型\n\n  // 文件分类\n  type   String @default(\"OTHER\") // IMAGE/DOCUMENT/AVATAR/REPORT/OTHER\n  status String @default(\"UPLOADED\") // UPLOADING/UPLOADED/FAILED/DELETED\n\n  // 元数据\n  metadata Json? // 存储额外信息（如图片尺寸、处理参数等）\n\n  // 时间戳\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  updatedAt DateTime  @updatedAt @map(\"updated_at\")\n  deletedAt DateTime? @map(\"deleted_at\")\n\n  // 关联关系\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"files\")\n}\n\n// 系统配置表\nmodel SystemConfig {\n  id          String   @id @default(cuid())\n  key         String   @unique\n  value       String\n  description String?\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"system_configs\")\n}\n\n// AI服务使用统计表\nmodel AIUsageStats {\n  id           String   @id @default(cuid())\n  provider     String // AI服务提供商（百度、阿里、讯飞等）\n  model        String // 模型名称\n  requestCount Int      @default(0) @map(\"request_count\")\n  totalTokens  Int      @default(0) @map(\"total_tokens\")\n  totalCost    Float    @default(0) @map(\"total_cost\")\n  date         DateTime\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@unique([provider, model, date])\n  @@map(\"ai_usage_stats\")\n}\n\n// 创意讨论会话表\nmodel IdeaDiscussion {\n  id     String @id @default(cuid())\n  ideaId String @map(\"idea_id\")\n  userId String @map(\"user_id\")\n\n  // 讨论状态\n  status       DiscussionStatus @default(ACTIVE)\n  currentRound Int              @default(1) @map(\"current_round\") // 当前轮数 1-3\n  totalRounds  Int              @default(3) @map(\"total_rounds\") // 总轮数限制\n\n  // AI Agent信息\n  aiAgentType String @map(\"ai_agent_type\") // 分配的AI专家类型\n  aiAgentName String @map(\"ai_agent_name\") // AI专家名称\n\n  // 时间戳\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  updatedAt   DateTime  @updatedAt @map(\"updated_at\")\n  completedAt DateTime? @map(\"completed_at\")\n\n  // 关联关系\n  idea     Idea                @relation(fields: [ideaId], references: [id], onDelete: Cascade)\n  user     User                @relation(fields: [userId], references: [id], onDelete: Cascade)\n  messages DiscussionMessage[]\n\n  @@map(\"idea_discussions\")\n}\n\n// 讨论状态枚举\nenum DiscussionStatus {\n  ACTIVE // 进行中\n  COMPLETED // 已完成\n  EXPIRED // 已过期\n  CANCELLED // 已取消\n}\n\n// 讨论消息表\nmodel DiscussionMessage {\n  id           String @id @default(cuid())\n  discussionId String @map(\"discussion_id\")\n\n  // 消息内容\n  content     String // 消息内容\n  messageType MessageType @map(\"message_type\") // 消息类型\n  roundNumber Int         @map(\"round_number\") // 所属轮数\n\n  // 发送者信息\n  senderType SenderType @map(\"sender_type\") // 发送者类型\n  senderName String?    @map(\"sender_name\") // 发送者名称\n\n  // AI分析结果（仅AI消息有）\n  analysisData Json? @map(\"analysis_data\") // AI分析数据\n  suggestions  Json? // AI建议\n\n  // 时间戳\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // 关联关系\n  discussion IdeaDiscussion @relation(fields: [discussionId], references: [id], onDelete: Cascade)\n\n  @@map(\"discussion_messages\")\n}\n\n// 消息类型枚举\nenum MessageType {\n  INITIAL_ANALYSIS // 初始分析\n  CLARIFICATION_REQUEST // 澄清问题\n  USER_RESPONSE // 用户回应\n  IMPROVEMENT_SUGGESTION // 改进建议\n  FINAL_ASSESSMENT // 最终评估\n}\n\n// 发送者类型枚举\nenum SenderType {\n  USER // 用户\n  AI_AGENT // AI专家\n}\n",
  "inlineSchemaHash": "f77dcec81c88b0492c474ab6a9c6340545c5052760d9d25a6515af32794f63bc",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_email_verified\"},{\"name\":\"isPhoneVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_phone_verified\"},{\"name\":\"credits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"UserLevel\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_spent\"},{\"name\":\"totalEarned\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_earned\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_notifications\"},{\"name\":\"marketingEmails\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"marketing_emails\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_login_at\"},{\"name\":\"ideas\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"IdeaToUser\"},{\"name\":\"researchReports\",\"kind\":\"object\",\"type\":\"ResearchReport\",\"relationName\":\"ResearchReportToUser\"},{\"name\":\"creditTransactions\",\"kind\":\"object\",\"type\":\"CreditTransaction\",\"relationName\":\"CreditTransactionToUser\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"UserSession\",\"relationName\":\"UserToUserSession\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"FileToUser\"},{\"name\":\"discussions\",\"kind\":\"object\",\"type\":\"IdeaDiscussion\",\"relationName\":\"IdeaDiscussionToUser\"}],\"dbName\":\"users\"},\"UserSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSession\"}],\"dbName\":\"user_sessions\"},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"isRevoked\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_revoked\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":\"refresh_tokens\"},\"Idea\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"IdeaCategory\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"isAnonymous\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_anonymous\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"IdeaStatus\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"IdeaVisibility\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"view_count\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IdeaToUser\"},{\"name\":\"researchReports\",\"kind\":\"object\",\"type\":\"ResearchReport\",\"relationName\":\"IdeaToResearchReport\"},{\"name\":\"discussions\",\"kind\":\"object\",\"type\":\"IdeaDiscussion\",\"relationName\":\"IdeaToIdeaDiscussion\"}],\"dbName\":\"ideas\"},\"ResearchReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ideaId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"idea_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"reportData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"report_data\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basicAnalysis\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"basic_analysis\"},{\"name\":\"researchMethods\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"research_methods\"},{\"name\":\"dataSources\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"data_sources\"},{\"name\":\"mvpGuidance\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"mvp_guidance\"},{\"name\":\"businessModel\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"business_model\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReportStatus\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsCost\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"credits_cost\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"idea\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"IdeaToResearchReport\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResearchReportToUser\"}],\"dbName\":\"research_reports\"},\"CreditTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CreditTransactionType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relatedId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"related_id\"},{\"name\":\"balanceBefore\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"balance_before\"},{\"name\":\"balanceAfter\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"balance_after\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreditTransactionToUser\"}],\"dbName\":\"credit_transactions\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"outTradeNo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"out_trade_no\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"credits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerOrderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_order_id\"},{\"name\":\"payUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"pay_url\"},{\"name\":\"qrCodeUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"qr_code_url\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"paid_at\"},{\"name\":\"expiredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expired_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentToUser\"},{\"name\":\"refunds\",\"kind\":\"object\",\"type\":\"Refund\",\"relationName\":\"PaymentToRefund\"}],\"dbName\":\"payments\"},\"Refund\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_id\"},{\"name\":\"outRefundNo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"out_refund_no\"},{\"name\":\"refundAmount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"refund_amount\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerRefundId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_refund_id\"},{\"name\":\"operatorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"operator_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"refundedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"refunded_at\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToRefund\"}],\"dbName\":\"refunds\"},\"File\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"original_name\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"content_type\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FileToUser\"}],\"dbName\":\"files\"},\"SystemConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"system_configs\"},\"AIUsageStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"request_count\"},{\"name\":\"totalTokens\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_tokens\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"total_cost\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"ai_usage_stats\"},\"IdeaDiscussion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ideaId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"idea_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DiscussionStatus\"},{\"name\":\"currentRound\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_round\"},{\"name\":\"totalRounds\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_rounds\"},{\"name\":\"aiAgentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ai_agent_type\"},{\"name\":\"aiAgentName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ai_agent_name\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"idea\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"IdeaToIdeaDiscussion\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IdeaDiscussionToUser\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"DiscussionMessage\",\"relationName\":\"DiscussionMessageToIdeaDiscussion\"}],\"dbName\":\"idea_discussions\"},\"DiscussionMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discussionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"discussion_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageType\",\"kind\":\"enum\",\"type\":\"MessageType\",\"dbName\":\"message_type\"},{\"name\":\"roundNumber\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"round_number\"},{\"name\":\"senderType\",\"kind\":\"enum\",\"type\":\"SenderType\",\"dbName\":\"sender_type\"},{\"name\":\"senderName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_name\"},{\"name\":\"analysisData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"analysis_data\"},{\"name\":\"suggestions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"discussion\",\"kind\":\"object\",\"type\":\"IdeaDiscussion\",\"relationName\":\"DiscussionMessageToIdeaDiscussion\"}],\"dbName\":\"discussion_messages\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

