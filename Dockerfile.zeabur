# Zeabur优化的简化Dockerfile
FROM node:18-alpine AS base

# 安装系统依赖
RUN apk add --no-cache libc6-compat tzdata curl openssl

WORKDIR /app

# 环境变量
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# 依赖安装阶段
FROM base AS deps

# 复制依赖文件
COPY package.json package-lock.json* ./
COPY prisma ./prisma/

# 安装依赖(包括dotenv)
RUN npm ci --frozen-lockfile --only=production

# 构建阶段
FROM base AS builder

COPY package.json package-lock.json* ./
COPY prisma ./prisma/

# 安装所有依赖
RUN npm ci --frozen-lockfile

# 复制源代码
COPY . .

# 生成Prisma客户端
RUN npx prisma generate

# 构建应用
RUN npm run build

# 运行阶段
FROM base AS runner

# 创建用户
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# 复制必要文件
COPY --from=deps --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/server.js ./server.js
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./package.json
COPY --from=builder --chown=nextjs:nodejs /app/next.config.js ./next.config.js
COPY --from=builder --chown=nextjs:nodejs /app/src ./src
COPY --from=builder --chown=nextjs:nodejs /app/prisma ./prisma

# 再次生成Prisma客户端确保正确
RUN npx prisma generate

# 切换用户
USER nextjs

# 暴露端口
EXPOSE 8080

# 启动命令
CMD ["node", "server.js"]